package com.company;

import java.io.*;
import java.lang.*;
import java.util.*;


public class Main {
    public static void main(String[] args) {
        abc list1= new abc();
        list1.insert(2);
        list1.insert(3);
        list1.insert(4);
        list1.insert(5);
        list1.display(list1.head);
        System.out.println();
        abc list2=new abc();
        list2.insert(2);
        list2.insert(3);
        list2.insert(5);
        list2.insert(8);
        list2.display(list2.head);
        System.out.println();
        node addlist = list1.addition(list1.head, list2.head);
        list1.display(addlist);
    }
}
class node {
    int data;
    node next;

    public node(int data) {
        this.data = data;
        this.next=null;
    }
}
class abc{
    public node head;
    public node tail;
    public void insert(int data){
        node newnode =new node(data);
        if (head==null){
            head=newnode;
            tail=newnode;
        }
        else {
            tail.next=newnode;
            tail=newnode;
        }
    }
    public void display(node node ){
       if (node==null){
           return;
       }
       System.out.print(node.data+" ");
       display(node.next);
    }
    public node  reverse(node node ){
        node prev =null;
        node current =node;
        node next =null;
        while (current!=null){
            next =current.next;
            current.next=prev;
            prev=current;
            current=next;
        }
        node=prev;
        return node;
    }
  public node addition(node node1 ,node node2){
        node1 =this.reverse(node1);
        node2 =this.reverse(node2);
        node newlist =null;
        node prev =null;
        int c=0; int sum;
        while (node1!=null||node2!=null){
            sum =c+(node1!=null? node1.data : 0)+(node2!=null?node2.data:0);
            c=sum/10;
            node node =new node(sum%10);
            if (newlist==null){
                newlist=node;
            }
            else {
                prev.next=node;
            }
            prev=node;
            if(node1!=null){
                node1=node1.next;
            }
            if (node2!=null){
                node2=node2.next;
            }
        }
        if (c!=0){
            prev.next =new node(c);
        }
        newlist =this.reverse(newlist);
        return newlist;
  }
}





